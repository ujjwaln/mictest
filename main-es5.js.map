{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/mic-manager.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","micManagerService","cd","title","indices","pathDValues","isRecording","isAudioPlaying","isAudioPaused","i","push","recordedAudioUrl$","subscribe","audioUrl","audioPlayer","Audio","audioPlayerActive","length","requestAnimationFrame","doDraw","bind","analyser","getAnalyser","frequencyArray","Uint8Array","frequencyBinCount","getByteFrequencyData","adjustedLength","Math","floor","detectChanges","error","self","navigator","getUserMedia","audio","stream","startRecording","stopRecording","play","pause","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","MicManagerService","recordedChunks","busy$","audioContext","AudioContext","audioStream","createMediaStreamSource","createAnalyser","connect","fftSize","options","mimeType","mediaRecorder","MediaRecorder","addEventListener","event","data","size","afterMediaRecorderStop","start","next","stop","recordedAudioBlob","Blob","URL","createObjectURL","providedIn","environment","production","bootstrapModule","err","console"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSU;;AACQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;;;;;;;AACA;;AAAsF;AAAA;;AAAA;;AAAA;AAAA;;AACpF;;AACF;;;;;;AACA;;;;;;AATJ;;AACE;;AACE;;AAIA;;AAGA;;AACF;;AACF;;;;;;AATY;;AAAA;;AAIA;;AAAA;;AAGwC;;AAAA;;;;;;;;AAc1C;;;;;;;;AACuD;;;;;;;;AA0B7D;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AACjB;;AAAU;;AAAI;;AAAY;;AAC5B;;;;;;AACA;;;;;;;;AAXJ;;AACE;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AAAU;;AAAkB;;AAAY;;AAC1C;;AACA;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AACjB;;AAAU;;AAAI;;AAAY;;AAC5B;;AACA;;AAGA;;AACF;;AACF;;;;;;AAL0D;;AAAA;;AAGkB;;AAAA;;;;QDpDrEC,Y;AAWX,4BAAoBC,iBAApB,EAAkEC,EAAlE,EAAyF;AAAA;;AAAA;;AAArE,aAAAD,iBAAA,GAAAA,iBAAA;AAA8C,aAAAC,EAAA,GAAAA,EAAA;AAVlE,aAAAC,KAAA,GAAQ,WAAR;AACO,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,WAAA,GAAc,EAAd;AACA,aAAAC,WAAA,GAAc,KAAd;AACA,aAAAC,cAAA,GAAiB,KAAjB;AACA,aAAAC,aAAA,GAAgB,KAAhB;AAML,YAAIC,CAAC,GAAG,CAAR;;AACA,eAAOA,CAAC,GAAG,GAAX,EAAgB;AACd,eAAKL,OAAL,CAAaM,IAAb,CAAkBD,CAAC,EAAnB;AACD;;AACD,aAAKR,iBAAL,CAAuBU,iBAAvB,CAAyCC,SAAzC,CAAmD,UAACC,QAAD,EAAsB;AACvE,eAAI,CAACC,WAAL,GAAmB,IAAIC,KAAJ,CAAUF,QAAV,CAAnB;AACA,eAAI,CAACG,iBAAL,GAAyB,IAAzB;AACA,eAAI,CAACH,QAAL,GAAgBA,QAAhB;AACD,SAJD;AAKA,aAAKG,iBAAL,GAAyB,KAAzB;AACD;;;;iCACQP,C,EAAC;AACR,cAAI,KAAKJ,WAAL,CAAiBY,MAAjB,GAA0BR,CAA9B,EAAiC;AAC/B,mBAAO,KAAKJ,WAAL,CAAiBI,CAAjB,CAAP;AACD;AACF;;;iCACQ;AACPS,+BAAqB,CAAC,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAD,CAArB;AACA,cAAMC,QAAQ,GAAG,KAAKpB,iBAAL,CAAuBqB,WAAvB,EAAjB;AACA,cAAMC,cAAc,GAAG,IAAIC,UAAJ,CAAeH,QAAQ,CAACI,iBAAxB,CAAvB;AACAJ,kBAAQ,CAACK,oBAAT,CAA8BH,cAA9B;AACA,cAAII,cAAJ;;AACA,eAAK,IAAIlB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,GAApB,EAAyBA,EAAC,EAA1B,EAA8B;AAC5BkB,0BAAc,GAAGC,IAAI,CAACC,KAAL,CAAWN,cAAc,CAACd,EAAD,CAAzB,IAAiCmB,IAAI,CAACC,KAAL,CAAWN,cAAc,CAACd,EAAD,CAAzB,IAAgC,CAAlF;AACA,iBAAKJ,WAAL,CAAiBI,EAAjB,IAAsB,OAAQA,EAAR,GAAa,YAAb,GAA4BkB,cAAlD;AACD;;AACD,eAAKzB,EAAL,CAAQ4B,aAAR;AACD;;;sCACaC,K,EAAY,CACzB;;;oCACW;AAAA;;AACV,cAAMC,IAAI,GAAG,IAAb;AACA,eAAKhB,iBAAL,GAAyB,KAAzB;AACAiB,mBAAS,CAACC,YAAV,CAAuB;AAACC,iBAAK,EAAE;AAAR,WAAvB,EAAsC,UAACC,MAAD,EAAyB;AAC7D,kBAAI,CAACC,cAAL,CAAoBD,MAApB;AACD,WAFD,EAEG,UAAAL,KAAK,EAAI;AACV,kBAAI,CAACzB,WAAL,GAAmB,KAAnB;AACD,WAJD;AAKD;;;uCACc8B,M,EAAqB;AAClC,eAAK9B,WAAL,GAAmB,IAAnB;AACA,eAAKL,iBAAL,CAAuBoC,cAAvB,CAAsCD,MAAtC;AACA,eAAKjB,MAAL,GAHkC,CAIlC;AACA;AACA;AACA;AACA;AACD;;;mCACU;AACT;AACA;AACA;AACA;AACA,eAAKlB,iBAAL,CAAuBqC,aAAvB;AACA,eAAKhC,WAAL,GAAmB,KAAnB;AACD;;;+BACM;AACL,eAAKQ,WAAL,CAAiByB,IAAjB;AACA,eAAKhC,cAAL,GAAsB,IAAtB;AACA,eAAKC,aAAL,GAAqB,KAArB;AACD;;;gCACO;AACN,eAAKM,WAAL,CAAiB0B,KAAjB;AACA,eAAKjC,cAAL,GAAsB,KAAtB;AACA,eAAKC,aAAL,GAAqB,IAArB;AACD;;;iCACQ;AACP,eAAKQ,iBAAL,GAAyB,KAAzB;AACA,eAAKT,cAAL,GAAsB,KAAtB;AACA,eAAKC,aAAL,GAAqB,KAArB;AACD;;;;;;;uBAnFUR,Y,EAAY,uI,EAAA,gI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,sqE;AAAA;AAAA;ACRzB;;AACE;;AACE;;AACE;;AAAiI;;AAAc;;AACjJ;;AAEA;;AACE;;AAYF;;AAEA;;AACE;;AAEE;;AAAA;;AAGE;;AACE;;AACE;;AACE;;AAGF;;AACF;;AACA;;AACE;;AACA;;AACA;;AACA;;AACF;;AACF;;AACA;;AAEF;;AACF;;AACF;;AAEA;;AAAA;;AACE;;AAcF;;AAEA;;AACE;;AAAM;;AAAkD;;AAAG;;AAAoB;;AAAI;;AACrF;;AAEF;;AACF;;;;AA/D+B;;AAAA;;AAeA;;AAAA;;AAST;;AAAA;;AAkBU;;AAAA;;;;;;;;;sEDzCnBA,Y,EAAY;cALxB,uDAKwB;eALd;AACTyC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAbJ,CACP,uEADO,EAEP,4FAFO,EAGP,gEAHO,EAIP,0EAJO,EAKP,wEALO,EAMP,0EANO,EAOP,oEAPO,EAQP,oEARO,EASP,qEATO,EAUP,sEAVO,EAWP,4FAXO,CAaI;;;;0HAGFA,S,EAAS;AAAA,uBAlBlB,2DAkBkB;AAlBN,kBAGZ,uEAHY,EAIZ,4FAJY,EAKZ,gEALY,EAMZ,0EANY,EAOZ,wEAPY,EAQZ,0EARY,EASZ,oEATY,EAUZ,oEAVY,EAWZ,qEAXY,EAYZ,sEAZY,EAaZ,4FAbY;AAkBM,O;AALM,K;;;;;sEAKfA,S,EAAS;cApBrB,sDAoBqB;eApBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRC,iBAAO,EAAE,CACP,uEADO,EAEP,4FAFO,EAGP,gEAHO,EAIP,0EAJO,EAKP,wEALO,EAMP,0EANO,EAOP,oEAPO,EAQP,oEARO,EASP,qEATO,EAUP,sEAVO,EAWP,4FAXO,CAJD;AAiBRC,mBAAS,EAAE,EAjBH;AAkBRC,mBAAS,EAAE,CAAC,2DAAD;AAlBH,S;AAoBY,Q;;;;;;;;;;;;;;;;;;ACpCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,iB;AAOX,mCAAc;AAAA;;AALP,aAAAC,cAAA,GAAiB,EAAjB;AAGA,aAAAC,KAAA,GAAkC,IAAI,oDAAJ,CAA6B,KAA7B,CAAlC;AACA,aAAAxC,iBAAA,GAA6C,IAAI,oDAAJ,CAA4B,IAA5B,CAA7C;AACS;;;;uCACOyB,M,EAAqB;AAC1C,cAAMgB,YAAY,GAAG,IAAIC,YAAJ,EAArB;AACA,cAAMC,WAAW,GAAGF,YAAY,CAACG,uBAAb,CAAqCnB,MAArC,CAApB;AACA,cAAMf,QAAQ,GAAG+B,YAAY,CAACI,cAAb,EAAjB;AACAF,qBAAW,CAACG,OAAZ,CAAoBpC,QAApB;AACAA,kBAAQ,CAACqC,OAAT,GAAmB,IAAnB;AACA,eAAKrC,QAAL,GAAgBA,QAAhB;AACD;;;sCACU;AACT,iBAAO,KAAKA,QAAZ;AACD;;;uCACce,M,EAAqB;AAAA;;AAClC,cAAMuB,OAAO,GAAG;AAAEC,oBAAQ,EAAE;AAAZ,WAAhB;AACA,eAAKV,cAAL,GAAsB,EAAtB,CAFkC,CAGlC;;AACA,eAAKW,aAAL,GAAqB,IAAIC,aAAJ,CAAkB1B,MAAlB,EAA0BuB,OAA1B,CAArB;AACA,eAAKE,aAAL,CAAmBE,gBAAnB,CAAoC,eAApC,EAAqD,UAAAC,KAAK,EAAI;AAC5D,gBAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,GAAkB,CAAtB,EAAyB;AACvB,oBAAI,CAAChB,cAAL,CAAoBxC,IAApB,CAAyBsD,KAAK,CAACC,IAA/B;AACD;AACF,WAJD;AAKA,eAAKJ,aAAL,CAAmBE,gBAAnB,CAAoC,MAApC,EAA4C,KAAKI,sBAAL,CAA4B/C,IAA5B,CAAiC,IAAjC,CAA5C;AACA,eAAKoC,cAAL,CAAoBpB,MAApB;AACA,eAAKyB,aAAL,CAAmBO,KAAnB;AACA,eAAKjB,KAAL,CAAWkB,IAAX,CAAgB,IAAhB;AACD;;;wCACe;AACd,eAAKR,aAAL,CAAmBS,IAAnB;AACD;;;iDACqB;AACpB,cAAMC,iBAAiB,GAAG,IAAIC,IAAJ,CAAS,KAAKtB,cAAd,CAA1B;AACA,cAAMrC,QAAQ,GAAG4D,GAAG,CAACC,eAAJ,CAAoBH,iBAApB,CAAjB;AACA,eAAKpB,KAAL,CAAWkB,IAAX,CAAgB,KAAhB;AACA,eAAK1D,iBAAL,CAAuB0D,IAAvB,CAA4BxD,QAA5B;AACD;;;;;;;uBA1CUoC,iB;AAAiB,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACV0B,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;ACP9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACjD,KAAR,CAAcgD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { MicManagerService } from './mic-manager.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngmictest';\n  public indices = [];\n  public pathDValues = [];\n  public isRecording = false;\n  public isAudioPlaying = false;\n  public isAudioPaused = false;\n  private timer: any;\n  private audioPlayer: any;\n  public audioPlayerActive: boolean;\n  public audioUrl: string;\n  constructor(private micManagerService: MicManagerService, private cd: ChangeDetectorRef) {\n    let i = 0;\n    while (i < 255) {\n      this.indices.push(i++);\n    }\n    this.micManagerService.recordedAudioUrl$.subscribe((audioUrl: string) => {\n      this.audioPlayer = new Audio(audioUrl);\n      this.audioPlayerActive = true;\n      this.audioUrl = audioUrl;\n    });\n    this.audioPlayerActive = false;\n  }\n  getPathD(i): string {\n    if (this.pathDValues.length > i) {\n      return this.pathDValues[i];\n    }\n  }\n  doDraw() {\n    requestAnimationFrame(this.doDraw.bind(this));\n    const analyser = this.micManagerService.getAnalyser();\n    const frequencyArray = new Uint8Array(analyser.frequencyBinCount);\n    analyser.getByteFrequencyData(frequencyArray);\n    let adjustedLength;\n    for (let i = 0; i < 255; i++) {\n      adjustedLength = Math.floor(frequencyArray[i]) - (Math.floor(frequencyArray[i]) % 5);\n      this.pathDValues[i] = 'M ' + (i) + ',255 l 0,-' + adjustedLength;\n    }\n    this.cd.detectChanges();\n  }\n  micNotAllowed(error: any) {\n  }\n  startTest() {\n    const self = this;\n    this.audioPlayerActive = false;\n    navigator.getUserMedia({audio: true}, (stream: MediaStream) => {\n      this.startRecording(stream);\n    }, error => {\n      this.isRecording = false;\n    });\n  }\n  startRecording(stream: MediaStream) {\n    this.isRecording = true;\n    this.micManagerService.startRecording(stream);\n    this.doDraw();\n    // if (this.timer) {\n    //   clearTimeout(this.timer);\n    //   this.timer = null;\n    // }\n    // this.timer = setTimeout(this.stopTest.bind(this), 2500);\n  }\n  stopTest() {\n    // if (this.timer) {\n    //   clearTimeout(this.timer);\n    //   this.timer = null;\n    // }\n    this.micManagerService.stopRecording();\n    this.isRecording = false;\n  }\n  play() {\n    this.audioPlayer.play();\n    this.isAudioPlaying = true;\n    this.isAudioPaused = false;\n  }\n  pause() {\n    this.audioPlayer.pause();\n    this.isAudioPlaying = false;\n    this.isAudioPaused = true;\n  }\n  cancel() {\n    this.audioPlayerActive = false;\n    this.isAudioPlaying = false;\n    this.isAudioPaused = false;\n  }\n}\n","<div class=\"app-container\">\n  <div fxLayout=\"column\">\n    <div fxLayout=\"row\" fxFlexFill fxLayoutAlign=\"center center\">\n      <h1 style=\"color: forestgreen; font-family: architects_daughterregular; font-size:96px; margin-top: 120px; margin-bottom: 120px\">Sound the best</h1>\n    </div>\n\n    <div fxLayout=\"row\" fxFlexFill fxLayoutAlign=\"center center\">\n      <div class=\"app-content\" *ngIf=\"!audioPlayerActive\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <button *ngIf=\"!isRecording\" mat-raised-button color=\"accent\" aria-label=\"Start Mic Test\"\n                  (click)=\"startTest()\">\n            Record Audio\n          </button>\n          <button *ngIf=\"isRecording\" mat-raised-button color=\"warn\" aria-label=\"Stop Mic Test\" (click)=\"stopTest()\">\n            Stop Recording\n          </button>\n          <mat-progress-spinner style=\"margin-left: 12px\" *ngIf=\"isRecording\" mode=\"indeterminate\" diameter=\"24\"></mat-progress-spinner>\n        </div>\n      </div>\n    </div>\n\n    <div fxLayout=\"row\" fxFlexFill fxLayoutAlign=\"center center\">\n      <div id=\"micTestDisplay\" [hidden]=\"!isRecording\">\n        <!--https://codepen.io/zapplebee/pen/gbNbZE -->\n        <svg preserveAspectRatio=\"none\" id=\"audioVisualizer\" version=\"1.1\"\n             xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 255 255\"\n             xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n          <defs>\n            <mask id=\"audioMask\">\n              <g id=\"maskGroup\">\n                <path xmlns=\"http://www.w3.org/2000/svg\"\n                      *ngFor=\"let i of indices\" stroke-dasharray=\"4,1\" [attr.d]=\"getPathD(i)\">\n                </path>\n              </g>\n            </mask>\n            <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" style=\"stop-color:#ff0a0a;stop-opacity:1\"/>\n              <stop offset=\"20%\" style=\"stop-color:#f1ff0a;stop-opacity:1\"/>\n              <stop offset=\"90%\" style=\"stop-color:#d923b9;stop-opacity:1\"/>\n              <stop offset=\"100%\" style=\"stop-color:#050d61;stop-opacity:1\"/>\n            </linearGradient>\n          </defs>\n          <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#gradient)\"\n                mask=\"url(#audioMask)\"></rect>\n        </svg>\n      </div>\n    </div>\n\n    <div fxLayout=\"row\" fxFlexFill fxLayoutAlign=\"center center\">\n      <div class=\"audio-player\" *ngIf=\"audioPlayerActive\">\n        <mat-toolbar color=\"primary\">\n          <button (click)=\"play()\" color=\"accent\" mat-raised-button>\n            <mat-icon>play_circle_filled</mat-icon> Play\n          </button>\n          <button mat-button (click)=\"pause()\" color=\"accent\">\n            <mat-icon>stop</mat-icon> Pause\n          </button>\n          <button mat-button (click)=\"cancel()\" color=\"accent\"  *ngIf=\"isAudioPlaying\">\n            <mat-icon>done</mat-icon> Done\n          </button>\n          <mat-progress-spinner mode=\"indeterminate\" diameter=\"24\" color=\"accent\" *ngIf=\"isAudioPlaying\"></mat-progress-spinner>\n        </mat-toolbar>\n      </div>\n    </div>\n\n    <div class=\"footer\">\n      <span>Recorded audio stays your device, your privacy is <b>completely protected</b></span>\n    </div>\n\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MicManagerService {\n  private analyser: AnalyserNode;\n  public recordedChunks = [];\n  // @ts-ignore\n  public mediaRecorder: MediaRecorder;\n  public busy$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public recordedAudioUrl$: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n  constructor() {}\n  private createAnalyser(stream: MediaStream) {\n    const audioContext = new AudioContext();\n    const audioStream = audioContext.createMediaStreamSource(stream);\n    const analyser = audioContext.createAnalyser();\n    audioStream.connect(analyser);\n    analyser.fftSize = 1024;\n    this.analyser = analyser;\n  }\n  getAnalyser(): AnalyserNode {\n    return this.analyser;\n  }\n  startRecording(stream: MediaStream) {\n    const options = { mimeType: 'audio/webm'};\n    this.recordedChunks = [];\n    // @ts-ignore\n    this.mediaRecorder = new MediaRecorder(stream, options);\n    this.mediaRecorder.addEventListener('dataavailable', event => {\n      if (event.data.size > 0) {\n        this.recordedChunks.push(event.data);\n      }\n    });\n    this.mediaRecorder.addEventListener('stop', this.afterMediaRecorderStop.bind(this));\n    this.createAnalyser(stream);\n    this.mediaRecorder.start();\n    this.busy$.next(true);\n  }\n  stopRecording() {\n    this.mediaRecorder.stop();\n  }\n  afterMediaRecorderStop(){\n    const recordedAudioBlob = new Blob(this.recordedChunks);\n    const audioUrl = URL.createObjectURL(recordedAudioBlob);\n    this.busy$.next(false);\n    this.recordedAudioUrl$.next(audioUrl);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}